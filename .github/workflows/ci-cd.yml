name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: self-hosted
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalar dependências do backend
        run: |
          cd backend
          npm install

      - name: Executar testes automatizados
        run: |
          cd backend
          npm test -- --coverage --outputFile=test-report.json

      - name: Upload do relatório de cobertura
        uses: actions/upload-artifact@v4
        with:
          name: cobertura-de-testes
          path: backend/coverage

  deploy-homolog:
    runs-on: self-hosted
    needs: build-and-test
    steps:
      - name: Fazer deploy em homologação
        run: |
          cd ~/pipeline-gerencia
          git pull origin main
          sudo docker-compose -p homolog -f docker-compose.homolog.yml down
          sudo docker-compose -p homolog -f docker-compose.homolog.yml up -d --build

  deploy-prod:
    if: github.event.head_commit.message == 'deploy:prod'
    runs-on: self-hosted
    needs: deploy-homolog
    steps:
      - name: Fazer deploy em produção
        run: |
          cd ~/pipeline-gerencia
          git pull origin main
          sudo docker-compose -p prod -f docker-compose.prod.yml down
          sudo docker-compose -p prod -f docker-compose.prod.yml up -d --build

