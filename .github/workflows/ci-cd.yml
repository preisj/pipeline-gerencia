name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalar dependências do backend
        run: |
          cd backend
          npm install

      - name: Executar testes
        run: |
          cd backend
          npm test -- --coverage

      - name: Upload do relatório de testes
        uses: actions/upload-artifact@v4
        with:
          name: cobertura-de-testes
          path: backend/coverage

  deploy-homolog:
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    steps:
      - name: Deploy em Homologação via SSH
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem univates@177.44.248.77 << 'EOF'
            cd ~/app
            git pull origin main
            sudo docker-compose -f docker-compose.homolog.yml up -d --build
EOF

  deploy-prod:
    if: github.event.head_commit.message == 'deploy:prod'
    runs-on: ubuntu-latest
    needs: deploy-homolog
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    steps:
      - name: Deploy em Produção via SSH
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem univates@177.44.248.77 << 'EOF'
            cd ~/app
            git pull origin main
            sudo docker-compose -f docker-compose.prod.yml up -d --build

